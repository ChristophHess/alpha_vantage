(function() {var implementors = {};
implementors["alpha_vantage"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/blocking/struct.APIKey.html\" title=\"struct alpha_vantage::blocking::APIKey\">APIKey</a>","synthetic":true,"types":["alpha_vantage::blocking::APIKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/crypto/struct.Entry.html\" title=\"struct alpha_vantage::crypto::Entry\">Entry</a>","synthetic":true,"types":["alpha_vantage::crypto::Entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/crypto/struct.Crypto.html\" title=\"struct alpha_vantage::crypto::Crypto\">Crypto</a>","synthetic":true,"types":["alpha_vantage::crypto::Crypto"]},{"text":"impl Freeze for <a class=\"enum\" href=\"alpha_vantage/error/enum.Error.html\" title=\"enum alpha_vantage::error::Error\">Error</a>","synthetic":true,"types":["alpha_vantage::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/exchange/struct.Exchange.html\" title=\"struct alpha_vantage::exchange::Exchange\">Exchange</a>","synthetic":true,"types":["alpha_vantage::exchange::Exchange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/forex/struct.Entry.html\" title=\"struct alpha_vantage::forex::Entry\">Entry</a>","synthetic":true,"types":["alpha_vantage::forex::Entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/forex/struct.Forex.html\" title=\"struct alpha_vantage::forex::Forex\">Forex</a>","synthetic":true,"types":["alpha_vantage::forex::Forex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/quote/struct.Quote.html\" title=\"struct alpha_vantage::quote::Quote\">Quote</a>","synthetic":true,"types":["alpha_vantage::quote::Quote"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/search/struct.Search.html\" title=\"struct alpha_vantage::search::Search\">Search</a>","synthetic":true,"types":["alpha_vantage::search::Search"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/search/struct.DataValue.html\" title=\"struct alpha_vantage::search::DataValue\">DataValue</a>","synthetic":true,"types":["alpha_vantage::search::DataValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/sector/struct.Data.html\" title=\"struct alpha_vantage::sector::Data\">Data</a>","synthetic":true,"types":["alpha_vantage::sector::Data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/sector/struct.Sector.html\" title=\"struct alpha_vantage::sector::Sector\">Sector</a>","synthetic":true,"types":["alpha_vantage::sector::Sector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/stock_time/struct.TimeSeries.html\" title=\"struct alpha_vantage::stock_time::TimeSeries\">TimeSeries</a>","synthetic":true,"types":["alpha_vantage::stock_time::TimeSeries"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/stock_time/struct.MetaData.html\" title=\"struct alpha_vantage::stock_time::MetaData\">MetaData</a>","synthetic":true,"types":["alpha_vantage::stock_time::MetaData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/stock_time/struct.Entry.html\" title=\"struct alpha_vantage::stock_time::Entry\">Entry</a>","synthetic":true,"types":["alpha_vantage::stock_time::Entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/technical_indicator/struct.Indicator.html\" title=\"struct alpha_vantage::technical_indicator::Indicator\">Indicator</a>","synthetic":true,"types":["alpha_vantage::technical_indicator::Indicator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/technical_indicator/struct.DataCollector.html\" title=\"struct alpha_vantage::technical_indicator::DataCollector\">DataCollector</a>","synthetic":true,"types":["alpha_vantage::technical_indicator::DataCollector"]},{"text":"impl Freeze for <a class=\"enum\" href=\"alpha_vantage/technical_indicator/enum.MetaDataValue.html\" title=\"enum alpha_vantage::technical_indicator::MetaDataValue\">MetaDataValue</a>","synthetic":true,"types":["alpha_vantage::technical_indicator::MetaDataValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alpha_vantage/user/struct.APIKey.html\" title=\"struct alpha_vantage::user::APIKey\">APIKey</a>","synthetic":true,"types":["alpha_vantage::user::APIKey"]},{"text":"impl Freeze for <a class=\"enum\" href=\"alpha_vantage/util/enum.CryptoFunction.html\" title=\"enum alpha_vantage::util::CryptoFunction\">CryptoFunction</a>","synthetic":true,"types":["alpha_vantage::util::CryptoFunction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"alpha_vantage/util/enum.ForexFunction.html\" title=\"enum alpha_vantage::util::ForexFunction\">ForexFunction</a>","synthetic":true,"types":["alpha_vantage::util::ForexFunction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"alpha_vantage/util/enum.OutputSize.html\" title=\"enum alpha_vantage::util::OutputSize\">OutputSize</a>","synthetic":true,"types":["alpha_vantage::util::OutputSize"]},{"text":"impl Freeze for <a class=\"enum\" href=\"alpha_vantage/util/enum.StockFunction.html\" title=\"enum alpha_vantage::util::StockFunction\">StockFunction</a>","synthetic":true,"types":["alpha_vantage::util::StockFunction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"alpha_vantage/util/enum.TechnicalIndicator.html\" title=\"enum alpha_vantage::util::TechnicalIndicator\">TechnicalIndicator</a>","synthetic":true,"types":["alpha_vantage::util::TechnicalIndicator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"alpha_vantage/util/enum.TechnicalIndicatorInterval.html\" title=\"enum alpha_vantage::util::TechnicalIndicatorInterval\">TechnicalIndicatorInterval</a>","synthetic":true,"types":["alpha_vantage::util::TechnicalIndicatorInterval"]},{"text":"impl Freeze for <a class=\"enum\" href=\"alpha_vantage/util/enum.TimeSeriesInterval.html\" title=\"enum alpha_vantage::util::TimeSeriesInterval\">TimeSeriesInterval</a>","synthetic":true,"types":["alpha_vantage::util::TimeSeriesInterval"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()